{"logs": [], "results": [{"node": {"raw_sql": "select\r\n    id as customer_id,\r\n    first_name,\r\n    last_name\r\nfrom raw.jaffle_shop.customers", "compiled": true, "database": "analytics", "schema": "analytics", "fqn": ["jaffle_shop", "staging", "stg_elm_customers"], "unique_id": "model.jaffle_shop.stg_elm_customers", "package_name": "jaffle_shop", "root_path": "/usr/src/develop/user-19764/environment-24276/repository-19567", "path": "staging/stg_elm_customers.sql", "original_file_path": "models/staging/stg_elm_customers.sql", "name": "stg_elm_customers", "resource_type": "model", "alias": "stg_elm_customers", "checksum": {"name": "sha256", "checksum": "80ca1534b1c4ea08fa08d6badd047ce8179bf27fade96a3e7a35e2593d2bc9e1"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/jaffle_shop/models/staging/stg_elm_customers.sql", "deferred": false, "compiled_sql": "select\r\n    id as customer_id,\r\n    first_name,\r\n    last_name\r\nfrom raw.jaffle_shop.customers", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select\r\n    id as customer_id,\r\n    first_name,\r\n    last_name\r\nfrom raw.jaffle_shop.customers"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.910794734954834, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-04-01T13:17:11.204602Z", "completed_at": "2021-04-01T13:17:11.247014Z"}, {"name": "execute", "started_at": "2021-04-01T13:17:11.247462Z", "completed_at": "2021-04-01T13:17:12.932375Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select\r\n    id as order_id,\r\n    user_id as customer_id,\r\n    order_date,\r\n    status\r\nfrom raw.jaffle_shop.orders", "compiled": true, "database": "analytics", "schema": "analytics", "fqn": ["jaffle_shop", "staging", "stg_elm_orders"], "unique_id": "model.jaffle_shop.stg_elm_orders", "package_name": "jaffle_shop", "root_path": "/usr/src/develop/user-19764/environment-24276/repository-19567", "path": "staging/stg_elm_orders.sql", "original_file_path": "models/staging/stg_elm_orders.sql", "name": "stg_elm_orders", "resource_type": "model", "alias": "stg_elm_orders", "checksum": {"name": "sha256", "checksum": "e9ac04552d0b02b7c0533fcd616ba497e8aad86d265831fa88d4afed7d240fe9"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/jaffle_shop/models/staging/stg_elm_orders.sql", "deferred": false, "compiled_sql": "select\r\n    id as order_id,\r\n    user_id as customer_id,\r\n    order_date,\r\n    status\r\nfrom raw.jaffle_shop.orders", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select\r\n    id as order_id,\r\n    user_id as customer_id,\r\n    order_date,\r\n    status\r\nfrom raw.jaffle_shop.orders"}, "error": null, "status": "SUCCESS 1", "execution_time": 2.249894142150879, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-04-01T13:17:13.118026Z", "completed_at": "2021-04-01T13:17:13.142157Z"}, {"name": "execute", "started_at": "2021-04-01T13:17:13.142394Z", "completed_at": "2021-04-01T13:17:15.147409Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "select orderid as order_id\r\n       ,PaymentMethod\r\n       ,status\r\n       ,case when lower(status) = 'success' then amount else (-1) * (amount) end/ 100 as amount\r\n       ,created\r\nfrom raw.stripe.payment", "compiled": true, "database": "analytics", "schema": "analytics", "fqn": ["jaffle_shop", "staging", "stg_elm_payments"], "unique_id": "model.jaffle_shop.stg_elm_payments", "package_name": "jaffle_shop", "root_path": "/usr/src/develop/user-19764/environment-24276/repository-19567", "path": "staging/stg_elm_payments.sql", "original_file_path": "models/staging/stg_elm_payments.sql", "name": "stg_elm_payments", "resource_type": "model", "alias": "stg_elm_payments", "checksum": {"name": "sha256", "checksum": "35afbcba0af4d8835ba17decf0ce88a7d70464c2f887ca291e4d141dfb945d94"}, "config": {"enabled": true, "materialized": "table", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt_snowflake.unset_query_tag"], "nodes": []}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/jaffle_shop/models/staging/stg_elm_payments.sql", "deferred": false, "compiled_sql": "select orderid as order_id\r\n       ,PaymentMethod\r\n       ,status\r\n       ,case when lower(status) = 'success' then amount else (-1) * (amount) end/ 100 as amount\r\n       ,created\r\nfrom raw.stripe.payment", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "select orderid as order_id\r\n       ,PaymentMethod\r\n       ,status\r\n       ,case when lower(status) = 'success' then amount else (-1) * (amount) end/ 100 as amount\r\n       ,created\r\nfrom raw.stripe.payment"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.7532496452331543, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-04-01T13:17:15.370478Z", "completed_at": "2021-04-01T13:17:15.393642Z"}, {"name": "execute", "started_at": "2021-04-01T13:17:15.393945Z", "completed_at": "2021-04-01T13:17:16.920958Z"}], "fail": null, "warn": null, "skip": false}, {"node": {"raw_sql": "{{\r\n  config(\r\n    materialized='view'\r\n  )\r\n}}\r\nwith customers as (\r\n    select * from {{ ref('stg_elm_customers') }}\r\n),\r\norders as (\r\n    select * from {{ ref('stg_elm_orders') }}\r\n),\r\npayments as (\r\n    select * from {{ ref('stg_elm_payments') }}\r\n),customer_payments as\r\n(\r\n    select order_id, sum(amount) as amount\r\n    from payments\r\n    group by order_id\r\n)\r\n,customer_orders as (\r\n    select\r\n        customer_id,\r\n        min(order_date) as first_order_date,\r\n        max(order_date) as most_recent_order_date,\r\n        count(order_id) as number_of_orders,\r\n        sum(amount) as totalPayment\r\n    from orders od\r\n    left join customer_payments using (order_id)\r\n    group by 1\r\n),\r\nfinal as (\r\n\r\n    select\r\n        customers.customer_id,\r\n        customers.first_name,\r\n        customers.last_name,\r\n        customer_orders.first_order_date,\r\n        customer_orders.most_recent_order_date,\r\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders,\r\n        coalesce(customer_orders.totalPayment, 0) as lifetime_value\r\n    from customers\r\n    left join customer_orders using (customer_id)\r\n)\r\nselect * from final", "compiled": true, "database": "analytics", "schema": "analytics", "fqn": ["jaffle_shop", "elm_customers"], "unique_id": "model.jaffle_shop.elm_customers", "package_name": "jaffle_shop", "root_path": "/usr/src/develop/user-19764/environment-24276/repository-19567", "path": "elm_customers.sql", "original_file_path": "models/elm_customers.sql", "name": "elm_customers", "resource_type": "model", "alias": "elm_customers", "checksum": {"name": "sha256", "checksum": "cec1a53a7751b08b73fbfa1f13a13a9568615704fa3dc4d59d3848e8ae23c3d5"}, "config": {"enabled": true, "materialized": "view", "persist_docs": {}, "post-hook": [], "pre-hook": [], "vars": {}, "quoting": {}, "column_types": {}, "alias": null, "schema": null, "database": null, "tags": [], "full_refresh": null}, "tags": [], "refs": [["stg_elm_customers"], ["stg_elm_orders"], ["stg_elm_payments"]], "sources": [], "depends_on": {"macros": ["macro.dbt_snowflake.set_query_tag", "macro.dbt.create_or_replace_view", "macro.dbt.persist_docs"], "nodes": ["model.jaffle_shop.stg_elm_customers", "model.jaffle_shop.stg_elm_orders", "model.jaffle_shop.stg_elm_payments"]}, "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "build_path": "target/run/jaffle_shop/models/elm_customers.sql", "deferred": false, "compiled_sql": "\nwith customers as (\n    select * from analytics.analytics.stg_elm_customers\n),\norders as (\n    select * from analytics.analytics.stg_elm_orders\n),\npayments as (\n    select * from analytics.analytics.stg_elm_payments\n),customer_payments as\n(\n    select order_id, sum(amount) as amount\n    from payments\n    group by order_id\n)\n,customer_orders as (\n    select\n        customer_id,\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders,\n        sum(amount) as totalPayment\n    from orders od\n    left join customer_payments using (order_id)\n    group by 1\n),\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders,\n        coalesce(customer_orders.totalPayment, 0) as lifetime_value\n    from customers\n    left join customer_orders using (customer_id)\n)\nselect * from final", "extra_ctes_injected": true, "extra_ctes": [], "injected_sql": "\nwith customers as (\n    select * from analytics.analytics.stg_elm_customers\n),\norders as (\n    select * from analytics.analytics.stg_elm_orders\n),\npayments as (\n    select * from analytics.analytics.stg_elm_payments\n),customer_payments as\n(\n    select order_id, sum(amount) as amount\n    from payments\n    group by order_id\n)\n,customer_orders as (\n    select\n        customer_id,\n        min(order_date) as first_order_date,\n        max(order_date) as most_recent_order_date,\n        count(order_id) as number_of_orders,\n        sum(amount) as totalPayment\n    from orders od\n    left join customer_payments using (order_id)\n    group by 1\n),\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order_date,\n        customer_orders.most_recent_order_date,\n        coalesce(customer_orders.number_of_orders, 0) as number_of_orders,\n        coalesce(customer_orders.totalPayment, 0) as lifetime_value\n    from customers\n    left join customer_orders using (customer_id)\n)\nselect * from final"}, "error": null, "status": "SUCCESS 1", "execution_time": 1.5366301536560059, "thread_id": "Thread-1", "timing": [{"name": "compile", "started_at": "2021-04-01T13:17:17.127090Z", "completed_at": "2021-04-01T13:17:17.152629Z"}, {"name": "execute", "started_at": "2021-04-01T13:17:17.152860Z", "completed_at": "2021-04-01T13:17:18.468985Z"}], "fail": null, "warn": null, "skip": false}], "generated_at": "2021-04-01T13:17:19.868049Z", "elapsed_time": 12.47911810874939}